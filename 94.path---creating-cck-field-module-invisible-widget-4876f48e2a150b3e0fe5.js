webpackJsonp([94],{331:function(e,t){e.exports={data:{config:{siteMetadata:{title:"Bricolage",author:"Kyle Mathews"}},markdown:{id:"/Users/kylemathews/programs/blog/pages/2010-11-19---creating-cck-field-module-invisible-widget/index.md",bodyHTML:"<p>Most CCK Field modules have a widget where the user adds information upon creating a node which is then saved with the node. For the recent <a href=\"http://drupal.org/project/etherpad\">Etherpad module</a> I wrote, I needed an \"invisible\" widget which saved with each new node some information from the field definition as well as autogenerated information. As I didn't any documentation on how to do this, I thought I'd document it here quickly.</p>\n<p>The first thing you do is define your database columns for your field in hook_field_settings.</p>\n<pre><code class=\"language-php\">&#x3C;?php\nfunction etherpad_field_settings($op, $field) {\n  switch ($op) {\n    // Code removed.\n    case 'database columns':\n      return array(\n        'etherpad_url' => array('type' => 'varchar', 'length' => 1024, 'not null' => FALSE,),\n        'etherpad_text' => array('type' => 'text', 'not null' => TRUE, 'size' => 'big'),\n        'attributes' => array('type' => 'text', 'size' => 'medium', 'not null' => FALSE),\n      );\n  }\n}\n?>\n</code></pre>\n<p>Next, you define your widget form inside hook_widget. Some tutorials I saw suggest you define your widget form in hook_elements/hook_process. I did that at first but decided against it as a) I never got it to work and b) it just adds needless complexity. Generally you'll just want to define your widget in hook_widgets.</p>\n<p>Two really important things here to get your \"invisible\" widget to work correctly. First, you <strong>must</strong> name your form keys the same as you named your database column names in hook_field_settings. This tripped me up for a long time. CCK saves data by magic (you never explicitly save anything from a widget) and this is the key to getting the incantation to take. Second, using the \"<a href=\"http://api.drupal.org/api/drupal/developer--topics--forms_api_reference.html/6#val\">value\" field type</a> was the key to creating an \"invisible\" field and getting my data saved correctly.</p>\n<pre><code class=\"language-php\">&#x3C;?php\n/**\n * Implementation of hook_widget().\n */\nfunction etherpad_widget(&#x26;$form, &#x26;$form_state, $field, $items, $delta = 0) {\n  $element['etherpad_url'] = array(\n    '#type' => 'value',\n    '#value' => (isset($items[$delta]['etherpad_url']) &#x26;&#x26; !empty($form['nid']['#value'])) ? $items[$delta]['etherpad_url'] : $field['etherpad_url'] . etherpad_generate_padid($field['etherpad_url']),\n  );\n  $element['etherpad_text'] = array(\n    '#type' => 'value',\n    '#value' => (isset($items[$delta]['etherpad_text']) &#x26;&#x26; !empty($form['nid']['#value'])) ? $items[$delta]['etherpad_text'] : \"default value for now until we have a function to generate one\",\n  );\n  $element['attributes'] = array(\n    '#type' => 'value',\n    '#value' => (isset($items[$delta]['attributes']) &#x26;&#x26; !empty($form['nid']['#value'])) ? $items[$delta]['attributes'] : serialize($field['attributes']),\n  );\n  // Used so that hook_field('validate') knows where to\n  // flag an error in deeply nested forms.\n  if (empty($form['#parents'])) {\n    $form['#parents'] = array();\n  }\n  $element['_error_element'] = array(\n    '#type' => 'value',\n    '#value' => implode('][', array_merge($form['#parents'], array('value'))),\n  );\n\n  return $element;\n}\n?>\n</code></pre>\n<p>And that's it! Read this and you'll save yourself hours of frustration :)</p>\n<p>One other note, the Devel module's \"reinstall module\" function is very useful as you'll be reinstalling the module often to reset the database w/ your changes. Enable the Devel block to access it.</p>\n<p>This documentation doesn't cover most of what you'll need to know to write a CCK module. I relied heavily on the following tutorials.</p>\n<ul>\n<li><a href=\"http://maxeydevbox.org/blogs/geoffmaxey/building-custom-compound-fieldswidgets-cck-drupal-6x\">http://maxeydevbox.org/blogs/geoffmaxey/building-custom-compound-fieldswidgets-cck-drupal-6x</a></li>\n<li><a href=\"http://www.lullabot.com/articles/creating-custom-cck-fields\">http://www.lullabot.com/articles/creating-custom-cck-fields</a></li>\n<li><a href=\"http://www.poplarware.com/articles/cck_field_module\">http://www.poplarware.com/articles/cck_field_module</a></li>\n</ul>\n",frontmatter:{readNext:null,title:'Creating a CCK Field module with an "invisible" widget',tags:["drupal","etherpad"],date:"November 18, 2010"}}},pathContext:{path:"/creating-cck-field-module-invisible-widget/",component:"/Users/kylemathews/programs/blog/pages/blog-post.js"}}}});
//# sourceMappingURL=94.path---creating-cck-field-module-invisible-widget-4876f48e2a150b3e0fe5.js.map